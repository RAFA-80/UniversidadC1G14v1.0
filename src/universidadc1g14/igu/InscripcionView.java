package universidadc1g14.igu;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadc1g14.AccesoADatos.AlumnoData;
import universidadc1g14.AccesoADatos.Conexion;
import universidadc1g14.AccesoADatos.InscripcionData;
import universidadc1g14.AccesoADatos.MateriaData;
import universidadc1g14.Entidades.Alumno;
import universidadc1g14.Entidades.Inscripcion;
import universidadc1g14.Entidades.Materia;

/**
 *
 * @author RAFAEL
 */
public class InscripcionView extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private ArrayList<Alumno> alumnos;
    private ArrayList<Materia> materias;
    private InscripcionData inscripcionData;
    private MateriaData materiaData;
    private AlumnoData alumnoData;
    private Conexion conexion;

    /**
     * Creates new form NuevoCliente
     */
    public InscripcionView() {
        initComponents();
        modelo = new DefaultTableModel();
        inscripcionData = new InscripcionData();
        materiaData = new MateriaData();
        materias = (ArrayList) materiaData.listarMaterias();
        alumnoData = new AlumnoData();
        alumnos = (ArrayList) alumnoData.listarAlumnos();
        cargarAlumnos();
        armarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbInscribir = new javax.swing.JButton();
        jrIinscripta = new javax.swing.JRadioButton();
        jrNoInscripta = new javax.swing.JRadioButton();
        cbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();

        setClosable(true);
        setForeground(java.awt.Color.orange);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario de Inscripcion");
        setDoubleBuffered(true);
        setFocusTraversalPolicyProvider(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 153, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("[INSCRIPCION]");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 153, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("ALUMNO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 153, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("LISTADO DE MATERIAS");

        jbSalir.setBackground(new java.awt.Color(204, 204, 255));
        jbSalir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(0, 0, 204));
        jbSalir.setText("Salir");
        jbSalir.setContentAreaFilled(false);
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbAnular.setBackground(new java.awt.Color(204, 204, 255));
        jbAnular.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAnular.setForeground(new java.awt.Color(0, 0, 204));
        jbAnular.setText("Anular Inscripcion");
        jbAnular.setContentAreaFilled(false);
        jbAnular.setEnabled(false);
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbInscribir.setBackground(new java.awt.Color(204, 204, 255));
        jbInscribir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbInscribir.setForeground(new java.awt.Color(0, 0, 204));
        jbInscribir.setText("Inscribir");
        jbInscribir.setContentAreaFilled(false);
        jbInscribir.setEnabled(false);
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jrIinscripta.setBackground(new java.awt.Color(204, 204, 255));
        jrIinscripta.setForeground(new java.awt.Color(102, 153, 255));
        jrIinscripta.setText("INSCRIPTAS");
        jrIinscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrIinscriptaActionPerformed(evt);
            }
        });

        jrNoInscripta.setBackground(new java.awt.Color(204, 204, 255));
        jrNoInscripta.setForeground(new java.awt.Color(102, 153, 255));
        jrNoInscripta.setText("NO INSCRIPTAS");
        jrNoInscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrNoInscriptaActionPerformed(evt);
            }
        });

        cbAlumnos.setBackground(new java.awt.Color(204, 204, 255));
        cbAlumnos.setForeground(new java.awt.Color(102, 153, 255));

        jtMaterias.setBackground(new java.awt.Color(204, 204, 255));
        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jtMaterias);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrIinscripta)
                                .addGap(18, 18, 18)
                                .addComponent(jrNoInscripta)
                                .addGap(169, 169, 169))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrIinscripta)
                    .addComponent(jrNoInscripta))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        Alumno alumnoSeleccionado = (Alumno) cbAlumnos.getSelectedItem();
        int filaSelec = jtMaterias.getSelectedRow();
        if (filaSelec != -1) {
            int idM = (Integer) modelo.getValueAt(filaSelec, 0);

            inscripcionData.eliminarInscripcionMateria(alumnoSeleccionado.getIdAlumno(), idM);
            borrarTabla();

        } else {

            JOptionPane.showMessageDialog(this, "Usted debe seleccionar una materia");
        }


    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();

    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        Alumno alumnoSeleccionado = (Alumno) cbAlumnos.getSelectedItem();
        int filaSelec = jtMaterias.getSelectedRow();
        if (filaSelec != -1) {
            int idM = (Integer) modelo.getValueAt(filaSelec, 0);
            Materia mat = new Materia();
            mat.setIdMateria(idM);
            Inscripcion insc = new Inscripcion(0, alumnoSeleccionado, mat);
            inscripcionData.guardarInscripcion(insc);
            borrarTabla();

        } else {

            JOptionPane.showMessageDialog(this, "Usted debe seleccionar una materia");
        }


    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jrIinscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrIinscriptaActionPerformed
        // TODO add your handling code here:
        jrIinscripta.setSelected(true);
        jrNoInscripta.setSelected(false);
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
        borrarTabla();
        llenarTabla();
    }//GEN-LAST:event_jrIinscriptaActionPerformed

    private void jrNoInscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrNoInscriptaActionPerformed
        // TODO add your handling code here:
        jrNoInscripta.setSelected(true);
        jrIinscripta.setSelected(false);
        jbAnular.setEnabled(false);
        jbInscribir.setEnabled(true);
        borrarTabla();
        llenarTabla();
    }//GEN-LAST:event_jrNoInscriptaActionPerformed

    private void borrarTabla() {
        int a = modelo.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> cbAlumnos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JRadioButton jrIinscripta;
    private javax.swing.JRadioButton jrNoInscripta;
    private javax.swing.JTable jtMaterias;
    // End of variables declaration//GEN-END:variables

    private void cargarAlumnos() {
        for (Alumno aux : alumnos) {
            cbAlumnos.addItem(aux);
        }
    }

    private void armarTabla() {
        ArrayList<Object> column = new ArrayList();
        column.add("Id");
        column.add("Nombre");
        column.add("Año");
        for (Object object : column) {
            modelo.addColumn(object);
        }
        jtMaterias.setModel(modelo);
    }

    private void llenarTabla() {
        Alumno alumnoSeleccionado = (Alumno) cbAlumnos.getSelectedItem();

        if (jrNoInscripta.isSelected()) {

            List<Materia> mat = inscripcionData.listarmateriasNoCursadas(alumnoSeleccionado.getIdAlumno());
            for (Materia m : mat) {

                modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio()});
            }
        } else {
            List<Materia> mat = inscripcionData.listarmateriasCursadas(alumnoSeleccionado.getIdAlumno());
            for (Materia m : mat) {

                modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio()});
            }

        }

    }

}
